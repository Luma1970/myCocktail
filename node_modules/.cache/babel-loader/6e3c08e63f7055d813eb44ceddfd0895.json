{"ast":null,"code":"var _jsxFileName = \"/Users/Dream/Documents/Dev/Progetti/react-projects/15-cocktails/setup/src/pages/SingleCocktail.js\";\nimport React from 'react';\nimport Loading from '../components/Loading';\nimport { useParams, Link } from 'react-router-dom';\nexport default function SingleCocktail() {\n  const {\n    id\n  } = useParams();\n  const [loading, setLoading] = React.useState(false);\n  const [cocktail, setCocktail] = React.useState(null);\n  React.useEffect(() => {\n    setLoading(true);\n\n    async function getCocktail() {\n      try {\n        const response = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`);\n        const data = await response.json();\n\n        if (data.drink) {\n          const {\n            strDrink: name,\n            strCategory: category,\n            strAlcoholic: info,\n            strGlass: glass,\n            strDrinkThumb: image,\n            strInstructions: instructions,\n            strIngredient1,\n            strIngredient2,\n            strIngredient3,\n            strIngredient4,\n            strIngredient5,\n            strIngredient6,\n            strIngredient7,\n            strIngredient8,\n            strIngredient9,\n            strIngredient10,\n            strIngredient11,\n            strIngredient12,\n            strIngredient13,\n            strIngredient14,\n            strIngredient15,\n            strMeasure1,\n            strMeasure2,\n            strMeasure3,\n            strMeasure4,\n            strMeasure5,\n            strMeasure6,\n            strMeasure7,\n            strMeasure8,\n            strMeasure9,\n            strMeasure10,\n            strMeasure11,\n            strMeasure12,\n            strMeasure13,\n            strMeasure14,\n            strMeasure15\n          } = data.drinks[0];\n          const ingredients = [strIngredient1, strIngredient2, strIngredient3, strIngredient4, strIngredient5, strIngredient6, strIngredient7, strIngredient8, strIngredient9, strIngredient10, strIngredient11, strIngredient12, strIngredient13, strIngredient14, strIngredient15];\n          const measures = [strMeasure1, strMeasure2, strMeasure3, strMeasure4, strMeasure5, strMeasure6, strMeasure7, strMeasure8, strMeasure9, strMeasure10, strMeasure11, strMeasure12, strMeasure13, strMeasure14, strMeasure15];\n          const newCocktail = {\n            name,\n            image,\n            info,\n            category,\n            glass,\n            instructions,\n            ingredients,\n            measures\n          };\n          setCocktail(newCocktail);\n        } else {\n          setCocktail(null);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n\n      setLoading(false);\n    }\n\n    getCocktail();\n  }, [id]);\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 12\n      }\n    });\n  }\n\n  if (!cocktail) {\n    return /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"section-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }, \"Non ci sono cocktail da mostrare\");\n  } else {\n    const {\n      name,\n      image,\n      info,\n      category,\n      glass,\n      instructions,\n      ingredients,\n      measures\n    } = cocktail;\n    return /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"section-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, name));\n  }\n}","map":{"version":3,"sources":["/Users/Dream/Documents/Dev/Progetti/react-projects/15-cocktails/setup/src/pages/SingleCocktail.js"],"names":["React","Loading","useParams","Link","SingleCocktail","id","loading","setLoading","useState","cocktail","setCocktail","useEffect","getCocktail","response","fetch","data","json","drink","strDrink","name","strCategory","category","strAlcoholic","info","strGlass","glass","strDrinkThumb","image","strInstructions","instructions","strIngredient1","strIngredient2","strIngredient3","strIngredient4","strIngredient5","strIngredient6","strIngredient7","strIngredient8","strIngredient9","strIngredient10","strIngredient11","strIngredient12","strIngredient13","strIngredient14","strIngredient15","strMeasure1","strMeasure2","strMeasure3","strMeasure4","strMeasure5","strMeasure6","strMeasure7","strMeasure8","strMeasure9","strMeasure10","strMeasure11","strMeasure12","strMeasure13","strMeasure14","strMeasure15","drinks","ingredients","measures","newCocktail","error","console","log"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Loading from '../components/Loading'\nimport { useParams, Link } from 'react-router-dom'\n\nexport default function SingleCocktail() {\n  const { id } = useParams()\n  const [loading, setLoading] = React.useState(false)\n  const [cocktail, setCocktail] = React.useState(null)\n\n  React.useEffect(() => {\n    setLoading(true)\n    async function getCocktail() {\n      try {\n        const response = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`)\n        const data = await response.json()\n        if(data.drink) {\n          const {\n            strDrink: name,\n            strCategory: category,\n            strAlcoholic: info,\n            strGlass: glass,\n            strDrinkThumb: image,\n            strInstructions: instructions, \n            strIngredient1, strIngredient2, strIngredient3, strIngredient4, strIngredient5, strIngredient6, strIngredient7, strIngredient8, strIngredient9, strIngredient10, strIngredient11, strIngredient12, strIngredient13, strIngredient14, strIngredient15,\n            strMeasure1, strMeasure2, strMeasure3, strMeasure4, strMeasure5, strMeasure6, strMeasure7, strMeasure8, strMeasure9, strMeasure10, strMeasure11, strMeasure12, strMeasure13, strMeasure14, strMeasure15,\n          } = data.drinks[0]\n          const ingredients = [\n            strIngredient1, strIngredient2, strIngredient3, strIngredient4, strIngredient5, strIngredient6, strIngredient7, strIngredient8, strIngredient9, strIngredient10, strIngredient11, strIngredient12, strIngredient13, strIngredient14, strIngredient15,\n          ]\n          const measures = [\n            strMeasure1, strMeasure2, strMeasure3, strMeasure4, strMeasure5, strMeasure6, strMeasure7, strMeasure8, strMeasure9, strMeasure10, strMeasure11, strMeasure12, strMeasure13, strMeasure14, strMeasure15,\n          ]\n          const newCocktail = {\n            name,\n            image,\n            info,\n            category,\n            glass,\n            instructions,\n            ingredients,\n            measures,\n          }\n          setCocktail(newCocktail)\n        } else {\n          setCocktail(null)\n        }\n      } catch (error) {\n         console.log(error);     \n      }\n      setLoading(false)    \n    }\n    getCocktail()\n  }, [id])\n  if (loading) {\n    return <Loading />\n  }\n  if(!cocktail) {\n    return (\n      <h2 className='section-title'>Non ci sono cocktail da mostrare</h2>\n    )\n  } else {\n    const {\n      name,\n      image,\n      info,\n      category,\n      glass,\n      instructions,\n      ingredients,\n      measures,\n    } = cocktail\n    return (\n      <section>\n        <h2 className=\"section-title\">{name}</h2>\n      </section>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}